package com.userlist.home;

import java.util.Enumeration;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.user.exception.AppError;
import com.userlist.constants.UsersConstants;
import com.userlist.jdbc.AppJDBCTemplate;

/**
 * Handles requests for the application home page.
 */
@RestController
@RequestMapping(method = RequestMethod.POST)
public class HomeController {
	
	private static final Logger logger = LoggerFactory.getLogger(HomeController.class);
	@Autowired
	private AppJDBCTemplate template;
	
	@RequestMapping(value="/registerUser")
	public HashMap<String, String> registerUser(@RequestBody final User aUserObject) throws Exception{
		
		HashMap<String, String> people=new HashMap<String, String>();

		if(aUserObject.getUserFName().isEmpty()){
			throw new InvalidUserException("Missing First Name");
	
		}else if(aUserObject.getUserLName().isEmpty()){
			throw new InvalidUserException("Missing Last Name");
			
		}else{
			this.template.insertAppData(null);
			System.out.println("Temp "+template);
		}
		return people;
	}
	/**
	 * Simply selects the home view to render by returning its name.
	 */
	@RequestMapping(value = "/appUsers")
	public HashMap<String, String> home(Locale locale,HttpServletRequest req ,Model model) {
		logger.info("Welcome home! The client locale is {}.", locale);
		
		
//		Enumeration<String> parameterNames = req.getParameterNames();
//
//		while (parameterNames.hasMoreElements()) {
//
//			String paramName = parameterNames.nextElement();
//			System.out.println(paramName);
//			System.out.println("n");
//
//			String[] paramValues = req.getParameterValues(paramName);
//			for (int i = 0; i < paramValues.length; i++) {
//				String paramValue = paramValues[i];
//				System.out.println("t" + paramValue);
//				System.out.println("n");
//			}
//
//		}
		
		Enumeration<String> parameterNames = req.getParameterNames();
		while (parameterNames.hasMoreElements()) {
			String key = (String) parameterNames.nextElement();
			String val = req.getParameter(key);
			System.out.println("A= <"+key+"> Value<"+val+">");
			
			
		}
		
		Map<String,Object> allMap=req.getParameterMap();
		for(String key:allMap.keySet()){
			System.out.println(allMap.get(key).getClass().getName());
			String[] strArr=(String[])allMap.get(key);
			for(String val:strArr){
				System.out.println("Str Array= "+val);
			}
			
			
		}

		HashMap<String, String> strPatientData=new HashMap<String, String>();
		strPatientData.put("name", "Nikunj");
		strPatientData.put("status", "hi");
		return strPatientData;
	}
	
	@RequestMapping(value = "login", method = RequestMethod.POST, produces={"application/json"})
	public  @ResponseBody HashMap<String, String> login(
			@RequestBody final LoginUser aUserObject,
		HttpSession session) {
		//session.invalidate();
//		if (!session.isNew()) {
//			session.invalidate();
//		}
		HashMap<String, String> loginStatus=new HashMap<String, String>();
		if(aUserObject.getUsername().equalsIgnoreCase("acc1") && aUserObject.getPassword().equalsIgnoreCase("123")) {
			session.setAttribute("username", aUserObject.getUsername());
			loginStatus.put("status","success");
			return loginStatus; 
		} else {
			loginStatus.put("status","failed");
			return loginStatus; 
		}
	}
	
	@RequestMapping(value = "logout", method = RequestMethod.POST,  produces={"application/json"})
	public @ResponseBody HashMap<String, String> logout(HttpSession session) {
		HashMap<String, String> logoutStatus=new HashMap<String, String>();
		logoutStatus.put("status","success");
		
		session.removeAttribute("username");
		session.invalidate();
		return logoutStatus;
	}
	
	
	@ResponseStatus(value=HttpStatus.BAD_REQUEST)
	@ExceptionHandler(InvalidUserException.class)
	@ResponseBody AppError handleProductException(HttpServletRequest req,InvalidUserException ex){
		return new AppError(req.getRequestURI()+" Invalid Product", ex);
	}
	
	
	 
	
	
}
